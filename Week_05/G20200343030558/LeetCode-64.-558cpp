#include <vector>

using namespace std;
int minPathSum(vector<vector<int>>& grid) {
        if(grid.size()==0)
            return 0;
        int m = grid.size();
        int n = grid[0].size();
        if(m == 1 && n == 1)
            return grid[0][0];

        //vector<vector<int>> dp(m, vector<int>(n, 0));

        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
               if(i==0 && j==0){
                   //dp[i][j] = grid[i][j];
                   continue;
               }
               if(i == 0){
                   //dp[0][j] = dp[0][j-1] + grid[0][j];
                   grid[0][j]+=grid[0][j-1];
               }
               else if(j == 0){
                   //dp[i][0] = dp[i-1][0]+grid[i][0];
                   grid[i][0]+=grid[i-1][0];
               }
               else{
                  // dp[i][j]=min(dp[i-1][j],dp[i][j-1])+grid[i][j];
                  grid[i][j]+=min(grid[i-1][j],grid[i][j-1]);
               }

                    
                
            }
        }
       // return dp[m-1][n-1];
       return grid[m-1][n-1];
        
    }